<!doctype html>
<html>

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="viewport" content="width=device-width,height=device-height,inital-scale=1.0,maximum-scale=1.0">
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-status-bar-style" content="black">
	<meta name="apple-touch-fullscreen" content="YES">
	<meta name="format-detection" content="telephone=no">
	<meta http-equiv="Expires" content="-1">
	<meta http-equiv="pragram" content="no-cache">
	<title>语音导航</title>
	<style>
		html {
            font-size: calc(100vw / 6.4) !important;
            font-family: "Microsoft YaHei";
			-webkit-user-select:none;
			user-select: none;
        }
        body {
            background-color: #eaeaeb;
            margin: 0;
            padding: 0;
            /*color: #333233;*/
            color: #3d3c3d;
        }
        a {
            color: #777777;
        }
        div {
            margin: 0;
            padding: 0;
            font-size: 0.1rem;
            padding-top: 4%;
        }
        span {
            font-size: 0.24rem;
            line-height: 0.4rem;
        }
        .span_b {
            font-size: 0.26rem;
            font-weight: bold;
        }
		.el-tag {
			background-color: rgba(64,158,255,.1);
			display: inline-block;
			padding: 0 10px;
			height: 32px;
			line-height: 30px;
			font-size: 12px;
			color: #409eff;
			border-radius: 4px;
			box-sizing: border-box;
			border: 1px solid rgba(64,158,255,.2);
			white-space: nowrap;
		}
		.el-tag--info {
			background-color: hsla(220,4%,58%,.1);
			border-color: hsla(220,4%,58%,.2);
			color: #909399;
		}
		.el-tag--success {
			background-color: rgba(103,194,58,.1);
			border-color: rgba(103,194,58,.2);
			color: #67c23a;
		}
    </style>
</head>

<body>
	<div id="app" style="margin: 4%;padding: 0px;">
		<!-- <div v-show="type=='0'" style="display: none;position: fixed;top: 0%;">{{text}}--{{illustrate}}</div>
	<div v-show="type=='1'" style="display: none;position: fixed;top: 0%;">{{textTwo}}--{{textFour}}--{{text}}--{{illustrateTwo}}</div> -->
		<!-- {{textThree}}--{{textFour}}--{{text}}--{{textTwo}}--{{localId}}---{{media_id}} -->
		<div style="position: fixed;top: 25%;text-align: center;width: 100%;z-index:100;left:0%;display: none;" v-show="state==1"><img
			 src="images/on.gif" style="width: 60%" /></div>
		<div style="position: absolute;top: 20px;right: 90px;display: none;" v-show="type=='0'"><span class="el-tag el-tag--success">普通话</span></div>
		<div style="position: absolute;top: 20px;right: 90px;display: none;" v-show="type=='1'" @click="onType('0')"><span
			 class="el-tag el-tag--info">普通话</span></div>
		<div style="position: absolute;top: 20px;right: 30px;display: none;" v-show="type=='0'" @click="onType('1')"><span
			 class="el-tag el-tag--info">粤语</span></div>
		<div style="position: absolute;top: 20px;right: 30px;display: none;" v-show="type=='1'"><span class="el-tag el-tag--success">粤语</span></div>
		<div style="margin: 25% 0% 4% 0%; text-align: center;"> <img src="images/u13.png" style="width: 60%" /> </div>
		<!-- {{text}}-{{step}}-{{result.length}} -->
		<div v-if="step=='0'">
			<div style="font-size: 0.26rem; padding-top: 5%;text-align: center;"> <span style="font-size: 0.36rem;">请按住按钮说出你要办的事项</span>
			</div>
			<div style="font-size: 0.26rem; padding-top: 5%;text-align: center;"> <span style="font-size: 0.36rem;">如：注销机动车驾驶证</span>
			</div>
			<div style="font-size: 0.26rem;padding-top: 34%; text-align: center;">
				<span style="font-size: 0.26rem;">注：当前语音识别语言为</span><span style="font-size: 0.26rem;" v-if="type=='0'">普通话</span><span
				 style="font-size: 0.26rem;" v-if="type=='1'">粤语</span>
			</div>
			<div style="padding-top: 5%;">
				<button @touchstart="start" @touchend="end" :style="state==1?'background:green;color:#fff;border: 1px solid #ccc;':'background:#fff;color:#000;border: 1px solid #ccc;'"
				 style="width: 100%;font-size: 0.36rem;padding-top: 2%;padding-bottom: 2%;user-select:none">按住说话</button>
				<!-- <img :src="state===1?'images/btn-.png':'images/btn.png'" width="100%" @touchstart="start" @touchend="end" alt=""> -->
				<!-- <button @click="play"
                    style="width: 100%;font-size: 0.36rem;padding-top: 2%;padding-bottom: 2%;">播放</button> -->
			</div>
		</div>
		<div v-if="step=='1'">
			<div style="font-size: 0.26rem; padding-top: 6%;text-align: center;"> <span style="font-size: 0.36rem;">正在努力反馈...</span>
			</div>
		</div>
		<div v-if="step=='2'">
			<div style="font-size: 0.26rem;min-height:3.5rem;padding-top: 6%;margin-left: 0.2rem;margin-right: 0.2rem;" v-if="result!=null&&result.length>0">
				<div>
					<span style="font-size: 0.3rem;">匹配如下（点击跳转）：</span>
				</div>
				<div v-for="(item,i) in result" style="font-size: 0.3rem;text-align:left;border-bottom: 2px solid #000;line-height: 0.4rem;">
					<a :href="item.item_address">{{item.item_name}}</a>
				</div>
			</div>
			<div>
				<div style="font-size: 0.26rem; padding-top: 6%;text-align: center;min-height:2.1rem;" v-if="result.length==0">
					<span style="font-size: 0.36rem;">无匹配到内容！</span>
					<span v-if="type=='0'&&text!=null&&text.length>0" style="font-size: 0.24rem;display: block;">(语音识别:){{text}}</span>
					<span v-if="type=='1'&&text!=null&&text.length>0" style="font-size: 0.24rem;display: block;">(语音识别:){{text}}</span>
				</div>
				<div style="font-size: 0.36rem; padding-top: 4%;text-align: center;" v-if="result.length==0">
					<span style="font-size: 0.36rem;user-select: none">请按住按钮说出你要办的事项</span>
				</div>
				<div style="font-size: 0.36rem; padding-top: 4%;text-align: center;" v-if="result.length==0">
					<span style="font-size: 0.36rem;">如：注销机动车驾驶证</span>
				</div>
			</div>
			<div style="font-size: 0.26rem;padding-top: 6%; text-align: center;">
				<span style="font-size: 0.26rem;">注：当前语音识别语言为</span><span style="font-size: 0.26rem;" v-if="type=='0'">普通话</span><span
				 style="font-size: 0.26rem;" v-if="type=='1'">粤语</span>
			</div>
			<div style="padding-top: 6%;">
				<button @touchstart="start" @touchend="end" :style="state==1?'background:green;color:#fff;border: 1px solid #ccc;':'background:#fff;color:#000;border: 1px solid #ccc;'"
				 style="width: 100%;font-size: 0.36rem;padding-top: 2%;padding-bottom: 2%;">按住说话</button>
				<!-- <img :src="state===1?'images/btn-.png':'images/btn.png'" width="100%" @touchstart="start" @touchend="end" alt=""> -->
			</div>
		</div>
	</div>
	<script src="https://res.wx.qq.com/open/js/jweixin-1.1.0.js"></script>
	<script src="./js/items.js"></script>
	<script src="./js/axios.min.js"></script>
	<script src="./js/vue-dev.js"></script>
	<script type="application/ecmascript">
		var instance = axios.create({
			baseURL: '/',
			headers: {
				'Content-Type': 'multipart/form-data'
			}, //文件上传头
			timeout: 100000
		})


		var post = axios.create({
			baseURL: '/',
			headers: {
				'Content-Type': 'application/x-www-form-urlencoded'
			},
			timeout: 100000
		})

		var app = new Vue({
			el: '#app',
			data: {
				state: 0, //按住开始录音
				jssdk: JSON.parse('<%- JSON.stringify(jssdk)%>'),
				localId: '',
				media_id: '',
				text: '',
				items: items,
				result: [],
				step: '0', //0语音识别  1 识别中  2识别完成
				type: '0', //0普通话 1粤语
				textTwo: '',
				textThree: '',
				textFour: '',
				illustrate: '',
				illustrateTwo: '',
				isSetTimeout: null,
			},
			mounted() {
				wx.config(this.jssdk);
				
				wx.ready(function () {
					console.log('success')
				});

			},
			methods: {
				onType(type) {
					this.type = type;
				},
				async getInfo(text) {
					// text = '我要驾驶证'
					let data = await post.post('/', this.qs({
							text
						}))
						.then(res => res).catch(err => err)
					console.log(data);

					this.result = data.data;
					this.step = '2';
				},
				/* findInItems:function(str){
                this.result = [];
                for (var i = 0; i < this.items.length; i++) {
                    var obj = this.items[i];
                    if(obj.name.indexOf(str) > -1)
                        this.result.push(obj);
                }
				this.step='2';
            }, */
				start: function (e) { //开始录音
					var that = this;
					e.preventDefault();
					console.log('*********start***********')
					this.state = 1;
					//console.log(e)
					wx.startRecord({
						success: function (res) {

							var tempFilePath = res.tempFilePath
							that.text = tempFilePath;
							that.illustrate = '开始录音';
							//that.isSetTimeout=true;
						},
						fail: function (res) {
							//录音失败
							that.illustrate = '录音失败';
							return false;
						}
					})


					//10秒自动结束
					that.isSetTimeout = window.setTimeout(() => {
						//录音中
						if (that.state == 1 && that.step != '1') {
							that.illustrateTwo = "今日2"
							that.state = 0;
							that.step = '1';
							that.result = [];

							wx.stopRecord({
								success: function (res) {
									console.log(res);
									that.localId = res.localId;
									if (that.type == '0') {
										//setTimeout(() => this.lastTwo(), 15000);
										wx.translateVoice({
											localId: res.localId, // 需要识别的音频的本地Id，由录音相关接口获得
											isShowProgressTips: 1, // 默认为1，显示进度提示
											success: function (res) {
												that.illustrate = '语音识别成功';
												that.state = 0;
												that.illustrate = '语音识别成功--' + res.translateResult;
												if (res.translateResult != null && res.translateResult != undefined) {
													that.text = res.translateResult; // 语音识别的结果
													if (that.text.length > 0) {
														that.getInfo(that.text)
														that.findInItems(that.text.substr(0, that.text.length - 1));
													} else {
														that.illustrate = '语音识别-没数据';
														that.last();
													}
												} else {
													that.illustrate = '语音识别-没数据~~';
													that.last();
												}


											},
											fail: function (res) {
												that.illustrate = '语音识别失败';
												that.last();
												console.log("wx.stopRecord错误1,语音识别失败");
											}
										});
									} else {
										wx.uploadVoice({
											localId: that.localId, // 需要上传的音频的本地ID，由stopRecord接口获得
											isShowProgressTips: 1, // 默认为1，显示进度提示
											success: function (res1) {

												that.media_id = res1.serverId;
												var media_id = res1.serverId
												let query = {
													media_id: media_id,
												};
												var url = '/upRid';
												post.post(url, that.qs(query)).then(function (res2) {
													that.textFour = res2.data.data.result
													//that.textTwo=res2.data.data.result.err_no;
													if (res2.data.code == '0' && res2.data.data != null && res2.data.data.result.result != null &&
														res2.data.data.result.result.length > 0) {
														//that.textTwo="进入1"
														//that.textThree=res2.data.data.result;
														// console.log(res2.data.data.result.result[0]);
														that.textTwo = res2.data.data.result.err_no;
														if (res2.data.data.result.err_no == 0) {
															that.textTwo = res2.data.data.result.result[0];
															var text = res2.data.data.result.result[0];
															text = text.replace(
																/[\ |\~|\`|\!|\@|\#|\$|\%|\^|\&|\*|\(|\)|\-|\_|\+|\=|\||\\|\[|\]|\{|\}|\;|\:|\"|\'|\,|\<|\.|\>|\/|\?]/g,
																"");
															that.text = text; // 语音识别的结果
															that.getInfo(that.text)
															// that.findInItems(text.substr(0,text.length - 1));
														} else {
															that.step = '2';
														}
													} else {
														//that.textTwo="进入2"
														if (that.step == '1') {
															that.step = '2';
														}
													}

												});

											},
											fail: function (res) {
												alert(33333)
												that.last();
												console.log("wx.stopRecord错误,上传失败");
											}
										});
									}
								},
								fail: function (res) {
									that.last();
									console.log("wx.stopRecord错误,录音失败");
								}
							});
						}

					}, 10000);
				},
				end: function (e) { //离开按钮触发事件
					//this.isSetTimeout=false;
					// 点击链接进入详情就变成真，真的就显示详情，假的就显示或不显示result列表
					this.showInfo = this.showInfo ? !this.showInfo : this.showInfo;
					clearTimeout(this.isSetTimeout)
					if (this.state == 1 && this.step != '1') {
						this.illustrateTwo = "今日1"
						//return false;
						this.step = '1';
						//setTimeout(() => this.last(), 10000);
						this.result = [];
						e.preventDefault();
						console.log('*********end***********')
						this.state = 0;
						//console.log(e)
						var that = this;
						wx.stopRecord({
							success: function (res) {
								that.illustrate = '停止录音';
								// console.log(res,'结束录音并上传');
								that.localId = res.localId;
								if (that.type == '0') {
									//setTimeout(() => this.lastTwo(), 15000);
									wx.translateVoice({
										localId: res.localId, // 需要识别的音频的本地Id，由录音相关接口获得
										isShowProgressTips: 1, // 默认为1，显示进度提示
										success: function (res) {
											that.illustrate = '语音识别成功';
											that.state = 0;
											that.illustrate = '语音识别成功--' + res.translateResult;
											if (res.translateResult != null && res.translateResult != undefined) {
												that.text = res.translateResult; // 语音识别的结果
												if (that.text.length > 0) {
													that.getInfo(that.text)
													//  that.findInItems(that.text.substr(0,that.text.length - 1));
												} else {
													that.illustrate = '语音识别-没数据';
													that.last();
												}
											} else {
												that.illustrate = '语音识别-没数据~~';
												that.last();
											}


										},
										fail: function (res) {
											that.illustrate = '语音识别失败';
											that.last();
											console.log("wx.stopRecord错误,语音识别失败");
										}
									});
								} else {
									wx.uploadVoice({
										localId: that.localId, // 需要上传的音频的本地ID，由stopRecord接口获得
										isShowProgressTips: 1, // 默认为1，显示进度提示
										success: function (res1) {

											that.media_id = res1.serverId;
											var media_id = res1.serverId
											let query = {
												media_id: media_id,
											};

											var url = '/upRid';
											post.post(url, that.qs(query)).then(function (res2) {
												that.textFour = res2.data.data.result
												//that.textTwo=res2.data.data.result.err_no;
												if (res2.data.code == '0' && res2.data.data != null && res2.data.data.result.result != null &&
													res2.data.data.result.result.length > 0) {
													//that.textTwo="进入1"
													//that.textThree=res2.data.data.result;
													// console.log(res2.data.data.result.result[0]);
													that.textTwo = res2.data.data.result.err_no;
													if (res2.data.data.result.err_no == 0) {
														that.textTwo = res2.data.data.result.result[0];
														var text = res2.data.data.result.result[0];
														text = text.replace(
															/[\ |\~|\`|\!|\@|\#|\$|\%|\^|\&|\*|\(|\)|\-|\_|\+|\=|\||\\|\[|\]|\{|\}|\;|\:|\"|\'|\,|\<|\.|\>|\/|\?]/g,
															"");
														that.text = text; // 语音识别的结果
														that.getInfo(text)
														// that.findInItems(text.substr(0,text.length - 1));
													} else {
														that.step = '2';
													}
												} else {
													//that.textTwo="进入2"
													if (that.step == '1') {
														that.step = '2';
													}
												}

											});

										},
										fail: function (res) {
											that.last();
											console.log("wx.stopRecord错误,录音失败");
										}
									});
								}

							},
							fail: function (res) {
								that.illustrate = '停止录音失败';
								that.last();
								console.log("wx.stopRecord错误,录音失败");
							}
						});
					}

				},

				qs(obj) {
					var res = '';
					var i = 0;
					for (var p in obj) {
						res += p + '=' + obj[p] + '&';
						i++;
					}
					return res.substr(0, res.length - 1);
				},

				last() {
					//if(this.state==1){
					//	return false;
					//}
					if (this.step == '1') {
						this.step = '2';
					}
				},

				lastTwo() {
					if (this.step == '1') {
						this.step = '2';
					}
				},

				play: function () {
					var that = this;
					wx.playVoice({
						localId: that.localId // 需要播放的音频的本地ID，由stopRecord接口获得
					});
				}
			}
		})
	</script>
</body>

</html>

</html>

<style>
	body {
		font-size: 62.5%;
		font-family: "Microsoft YaHei";
		color: #2a3542;
	}

	* {
		margin: 0;
		padding: 0;
	}

	a {
		text-decoration: none;
	}

	.clear {
		clear: both;
	}

	.content {
		padding: 10px 15px 20px 15px;

	}

	.content .title {
		font-size: 22px;
		letter-spacing: 1px !important;
		padding-top: 15px;
		font-family: PingFangSC-Semibold;
		color: #3f4146;
		-webkit-letter-spacing: 0;
		-moz-letter-spacing: 0;
		-ms-letter-spacing: 0;
		letter-spacing: 0;
		line-height: 32px;
		font-weight: 400;
		/*text-align: center;*/
	}

	.content .time {
		color: #888888;
		font-size: 0.9rem;
		/*text-align: center;*/
		margin: 18px 0;
	}

	.content .main {
		font-size: 1.1rem;
		line-height: 30px;
		letter-spacing: 1px;
		margin-top: 5px;
		color: #333333;
	}

	.content .pic_list {
		margin-top: 10px;
		padding: 15px 0;
		width: 100%;
		border-top: dashed 1px #dfdfdf;
		border-bottom: dashed 1px #dfdfdf;
	}

	.content .pic_list .pic {
		width: 8em;
		height: 8em;
		float: left;
		background: #ddd;
		margin-right: 5px;
		margin-bottom: 5px;
	}

	.content .pic_list .pic img {
		width: 100%;
		height: 100%;
	}

	.pic_list .desc {
		margin-bottom: 10px;
		font-size: 1rem;
	}

	.pic_list .qty {
		font-size: 0.8rem;
		margin-left: 5px;
		color: #888;
	}

	.content .att_list {
		padding-top: 15px;

	}

	.att_list .desc {
		margin-bottom: 10px;
		font-size: 1rem;
	}

	.att_list .qty {
		font-size: 0.8rem;
		margin-left: 5px;
		color: #888;
	}

	.att {
		position: relative;
		padding: 8px 5px 8px 63px;
		height: 45px;
		margin-bottom: 10px;
		background-color: #f5f7fa;
	}

	.att img {
		width: 45px;
		height: 45px;
		position: absolute;
		left: 8px;
		top: 7.5px;
	}

	.att .file_name {
		padding-top: 1.5px;
		font-size: 16px;
		overflow: hidden;
		word-break: keep-all;
		white-space: nowrap;
		text-overflow: ellipsis;
	}

	.att .file_size {
		font-size: 12px;
		color: #888;
	}

	.content .end {
		text-align: center;
		color: #dfdfdf;
		font-size: 0.8rem;
		margin-top: 40px;
		margin-bottom: 22px;
	}
</style>